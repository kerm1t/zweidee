//////////////////////////////
// main.cpp
// - random noise
//////////////////////////////

#include "stdafx.h"
#include "resource.h"

#include "zweidee.h"    // draw to 2D buffer


//////////////////////////
// put your variables here
//////////////////////////

void do_stuff_here() // b) function
{
  for (int i = 0; i < FBUF2D_PIXELS; i++)
  {
    int x = i % FBUF2D_WIDTH;
    int y = i / FBUF2D_WIDTH;
    zweidee::fbuf2d.setpixel(zweidee::data, x, y, rand(), rand(), rand());
  }
  glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, zweidee::fbuf2d.width, zweidee::fbuf2d.height, 0, GL_BGR, GL_UNSIGNED_BYTE, zweidee::data);
}

// moved to zweidee.h --> void RenderThread(void *args)

int APIENTRY _tWinMain(HINSTANCE hInstance,
  HINSTANCE hPrevInstance,
  LPTSTR    lpCmdLine,
  int       nCmdShow)
{
  zweidee::app_init(hInstance, hPrevInstance, lpCmdLine, nCmdShow);


  ///////////////
  // Init
  ///////////////

  zweidee::doit = do_stuff_here; // c) init function pointer
  // stuff is done here
  _beginthread(zweidee::RenderThread, 0, 0);



  return zweidee::app_exit(hInstance);
}

// moved to zweidee.h --> autogenerated: register window class (mandatory)

// moved to zweidee.h --> BOOL InitInstance(HINSTANCE hInstance, int nCmdShow, int w, int h)

// moved to zweidee.h --> autogenerated: process main window's messages

// moved to zweidee.h --> INT_PTR CALLBACK About(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
